name: Build

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ "3.12", "3.13" ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: 'true'
          virtualenvs-in-project: 'true'

      - name: Load cached Poetry virtualenv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          path: .venv

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction

      - name: Build project
        run: poetry build

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-${{ runner.os }}-${{ matrix.python-version }}
          path: 'dist/*'
          retention-days: 7